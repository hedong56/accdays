<?xml version="1.0" encoding= "UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:context="http://www.springframework.org/schema/context"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
    <context:annotation-config/><!--打开依赖注入的注解配置方式-->
    <context:component-scan base-package="com.accdays"/>

    <!-- 指明存放占位符的位置 -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
          <property name="locations">
              <value>classpath:jdbc.properties</value>
          </property>
    </bean>

    <bean id="dataSource" destroy-method="close"
         class="org.apache.commons.dbcp.BasicDataSource">
          <property name="driverClassName"
              value="${jdbc.driverClassName}"/>
          <property name="url" value="${jdbc.url}"/>
          <property name="username" value="${jdbc.username}"/>
          <property name="password" value="${jdbc.password}"/>
          
          <!-- Connection Pooling Info -->
          <property name="maxIdle" value="5"/>
          <property name="maxActive" value="40"/>
          <property name="defaultAutoCommit" value="false"/>
          <property name="timeBetweenEvictionRunsMillis" value="3600000"/>
          <property name="minEvictableIdleTimeMillis" value="3600000"/> 
    </bean>

    <bean id="sessionFactory"
         class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
          <property name="dataSource" ref="dataSource"/>
          <property name="packagesToScan">
              <list>
                  <value>com.accdays.model</value>
              </list>
          </property>
          <property name="hibernateProperties">
              <props>
                  <prop key="hibernate.dialect">
                     org.hibernate.dialect.MySQL5Dialect
                  </prop>
                  <prop key="hibernate.hbm2ddl.auto">update</prop><!-- 自动创建表 -->
                  <prop key="hibernate.show_sql">true</prop>
                  <!-- 格式化SQL语句 -->
                  <prop key="hibernate.format_sql">true</prop>
                  <prop key="hibernate.use_sql_comments">true</prop>
              </props>
          </property>
    </bean>
    
    <bean id="txManager"
         class="org.springframework.orm.hibernate4.HibernateTransactionManager">
          <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- 事务管理  -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
          <tx:attributes>
              <tx:method name="save*" propagation="REQUIRED"/><!--* com.accdays.service..*.*(..)（切入点）中的方法-->
          	  <!--由于是hibernate4，所以必须配置为开启事务 否则 getCurrentSession()获取不到-->
              <tx:method name="get*" propagation="REQUIRED" read-only="true"/><!--* com.accdays.service..*.*(..)（切入点）中的方法-->
              <tx:method name="find*" propagation="REQUIRED" read-only="true"/><!--* com.accdays.service..*.*(..)（切入点）中的方法-->
              <tx:method name="*" propagation="REQUIRED"/>
          </tx:attributes>
    </tx:advice>
    
    <aop:config>
    	  <!-- 注意 事务是配置在实现类上的(hibernate4必须添加事务才能得到session)-->
          <aop:pointcut expression="execution ( * com.accdays.service..*.*(..))||execution ( * com.accdays.rmi..*.*(..))" id="busServiceMethods"/><!-- 服务层中的方法作为切点,进行事务管理 -->
          <aop:advisor advice-ref="txAdvice" pointcut-ref="busServiceMethods"/>
    </aop:config>
</beans>
